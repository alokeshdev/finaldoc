{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\doctor\\\\client\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\n// Regular user route\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    userRole\n  } = useAuth();\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 39\n  }, this);\n};\n\n// Admin only route\n_s(PrivateRoute, \"OxzuvXFGyCfv+bJh9VAutaejTA8=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nconst AdminRoute = ({\n  children\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    userRole\n  } = useAuth();\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  if (userRole !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s2(AdminRoute, \"OxzuvXFGyCfv+bJh9VAutaejTA8=\", false, function () {\n  return [useAuth];\n});\n_c2 = AdminRoute;\nexport { PrivateRoute, AdminRoute };\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminRoute","_s2","_c2","$RefreshReg$"],"sources":["D:/Desktop/doctor/client/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// Regular user route\r\nconst PrivateRoute = ({ children }) => {\r\n  const { isAuthenticated, userRole } = useAuth();\r\n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\n// Admin only route\r\nconst AdminRoute = ({ children }) => {\r\n  const { isAuthenticated, userRole } = useAuth();\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  if (userRole !== 'admin') {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n  return children;\r\n};\r\n\r\nexport { PrivateRoute, AdminRoute }; "],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC/C,OAAOM,eAAe,GAAGF,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;;AAED;AAAAP,EAAA,CALMF,YAAY;EAAA,QACsBH,OAAO;AAAA;AAAAa,EAAA,GADzCV,YAAY;AAMlB,MAAMW,UAAU,GAAGA,CAAC;EAAEV;AAAS,CAAC,KAAK;EAAAW,GAAA;EACnC,MAAM;IAAET,eAAe;IAAEC;EAAS,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC/C,IAAI,CAACM,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EACA,IAAIL,QAAQ,KAAK,OAAO,EAAE;IACxB,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EACA,OAAOR,QAAQ;AACjB,CAAC;AAACW,GAAA,CATID,UAAU;EAAA,QACwBd,OAAO;AAAA;AAAAgB,GAAA,GADzCF,UAAU;AAWhB,SAASX,YAAY,EAAEW,UAAU;AAAG,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}